# Generated by Django 2.1.7 on 2019-02-19 06:33

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('bestiary', '0003_delete_level'),
    ]

    operations = [
        migrations.CreateModel(
            name='CairossDungeon',
            fields=[
                ('dungeon_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bestiary.Dungeon')),
                ('floor', models.IntegerField()),
                ('energy_cost', models.IntegerField(default=0, help_text='Energy cost to start a run')),
                ('xp', models.IntegerField(blank=True, help_text='XP gained by fully clearing the level', null=True)),
                ('slots', models.IntegerField(default=4, help_text='Serves as general slots if dungeon does not have front/back lines')),
            ],
            bases=('bestiary.dungeon',),
        ),
        migrations.CreateModel(
            name='GameItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('com2us_id', models.IntegerField()),
                ('category', models.IntegerField(choices=[(1, 'Monster'), (6, 'Currency'), (9, 'Summoning Scroll'), (10, 'Booster'), (11, 'Essence'), (12, 'Monster Piece'), (19, 'Guild Monster Piece'), (25, 'Rainbowmon'), (27, 'Rune Craft'), (29, 'Craft Material')], help_text='Typically corresponds to `item_master_id` field')),
                ('name', models.CharField(max_length=200)),
                ('icon', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('sell_value', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RiftBeast',
            fields=[
                ('dungeon_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bestiary.Dungeon')),
                ('energy_cost', models.IntegerField()),
                ('frontline_slots', models.IntegerField(default=4)),
                ('backline_slots', models.IntegerField(default=4)),
                ('max_slots', models.IntegerField(default=6, help_text='Maximum monsters combined front/backline.')),
            ],
            bases=('bestiary.dungeon',),
        ),
        migrations.CreateModel(
            name='RiftRaid',
            fields=[
                ('dungeon_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bestiary.Dungeon')),
                ('difficulty', models.IntegerField(choices=[(1, 'R1'), (2, 'R2'), (3, 'R3'), (4, 'R4'), (5, 'R5')])),
                ('energy_cost', models.IntegerField()),
                ('frontline_slots', models.IntegerField(default=4)),
                ('backline_slots', models.IntegerField(default=4)),
                ('max_slots', models.IntegerField(default=6, help_text='Maximum monsters combined front/backline.')),
            ],
            bases=('bestiary.dungeon',),
        ),
        migrations.CreateModel(
            name='Scenario',
            fields=[
                ('dungeon_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='bestiary.Dungeon')),
                ('stage', models.IntegerField()),
                ('difficulty', models.IntegerField(choices=[(1, 'Normal'), (2, 'Hard'), (3, 'Hell')], default=1)),
                ('energy_cost', models.IntegerField(default=0, help_text='Energy cost to start a run')),
                ('xp', models.IntegerField(blank=True, help_text='XP gained by fully clearing the level', null=True)),
                ('slots', models.IntegerField(default=4, help_text='Serves as general slots if dungeon does not have front/back lines')),
            ],
            options={
                'ordering': ('difficulty', 'stage'),
            },
            bases=('bestiary.dungeon',),
        ),
        migrations.AlterUniqueTogether(
            name='scenario',
            unique_together={('stage', 'difficulty')},
        ),
        migrations.AlterUniqueTogether(
            name='gameitem',
            unique_together={('com2us_id', 'category')},
        ),
    ]
